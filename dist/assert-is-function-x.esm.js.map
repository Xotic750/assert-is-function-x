{"version":3,"sources":["../src/assert-is-function-x.js"],"names":[],"mappings":"AAAA,OAAO,UAAP,MAAuB,eAAvB;AACA,OAAO,YAAP,MAAyB,+BAAzB;AACA,OAAO,WAAP,MAAwB,cAAxB;AAEA;;;;;;;;;AAQA,eAAe,SAAS,gBAAT,CAA0B,QAA1B,EAAoC;AACjD,MAAI,UAAU,CAAC,QAAD,CAAV,KAAyB,KAA7B,EAAoC;AAClC,QAAM,GAAG,GAAG,WAAW,CAAC,QAAD,CAAX,GAAwB,YAAY,CAAC,QAAD,CAApC,GAAiD,WAA7D;AACA,UAAM,IAAI,SAAJ,WAAiB,GAAjB,wBAAN;AACD;;AAED,SAAO,QAAP;AACD","file":"assert-is-function-x.esm.js","sourcesContent":["import isFunction from 'is-function-x';\nimport safeToString from 'to-string-symbols-supported-x';\nimport isPrimitive from 'is-primitive';\n\n/**\n * Tests `callback` to see if it is a function, throws a `TypeError` if it is\n * not. Otherwise returns the `callback`.\n *\n * @param {*} callback - The argument to be tested.\n * @throws {TypeError} Throws if `callback` is not a function.\n * @returns {*} Returns `callback` if it is function.\n */\nexport default function assertIsFunction(callback) {\n  if (isFunction(callback) === false) {\n    const msg = isPrimitive(callback) ? safeToString(callback) : '#<Object>';\n    throw new TypeError(`${msg} is not a function`);\n  }\n\n  return callback;\n}\n"]}